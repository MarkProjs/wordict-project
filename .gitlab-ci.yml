#Yaml provided by Jaya and Patricia last semester in web dev 4
#inspiration: https://gist.github.com/rishitells/3c4536131819cff4eba2c8ab5bbb4570
# package.json jest path discovered in https://stackoverflow.com/questions/60671752/deploying-via-google-cloud-build-trigger-sh-1-jest-permission-denied
image: node:latest

stages:
  - lint
  - build
  - test
  - deploy

build-frontend:
  stage: build
  cache:
    key:
      prefix: 'frontend'
      files:
        - 'client/package-lock.json'
    paths:
      - 'client/node_modules/'
  script:
    - cd client && npm install && CI=false npm run build
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - client/build
      - client/node_modules

build-backend:
  stage: build
  cache:
    key:
      prefix: 'backend'
      files:
        - 'api/package-lock.json'
    paths:
      - 'api/node_modules/'
  script:
    - cd server && npm install
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - server/node_modules/

test-frontend:
  stage: test
  dependencies:
    - build
  dependencies:
    - build-frontend
  script:
    - echo "UNCOMMENT THE TESTS"
    # - cd client && npm run test

test-backend:
  stage: test
  dependencies:
    - build
  variables:
    AZURE_SAS: $AzureSas
    MONGO_PASS: $MongoPass
  dependencies:
    - build-backend
  script:
    - echo "UNCOMMENT THE TESTS"
    # - cd server && npm run test

# from M Frydrychowicz
lint:
  stage: lint
  cache:
    paths:
      - ./node_modules
      - ./client/node_modules
  before_script:
    - npm install -g eslint 
    - cd client && npm install --save-dev eslint-plugin-security@latest eslint-plugin-react@latest
  script:
    - eslint --ext .js .

#test_db:
#  script:
#    - npm install
#    - node ./specs/start.js ./specs/db-postgres.spec.js


prod-deploy:
  stage: deploy
  image:  mcr.microsoft.com/azure-cli
  dependencies:
    - build-frontend
    - build-backend
  only:
    - main
  before_script:
    - "az login --allow-no-subscriptions --service-principal -u $AZ_SP_ID -p $AZ_SP_SECRET --tenant $AZ_TENANT"
  script:
    - zip -r deploy.zip client/build server ./package.json
    - "az webapp config appsettings set --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --settings WEBSITE_RUN_FROM_PACKAGE='1'"
    - "az webapp config appsettings set --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --settings ATLAS_URI=$ATLAS_URI"
    - "az webapp config appsettings set --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --settings AZURE_SAS=$AZURE_SAS"
    - "az webapp deployment source config-zip --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --src deploy.zip"
